pipeline {
    agent any
    stages {
        stage('Maven Clean Compile') {
            steps {
                dir('Backend') {
                    sh '''docker login -u fediijat -p kopp92i11
                    docker start postgresdb
                    mvn clean compile'''
                }
            }
        }

        stage('Unit Test') {
            steps {
                dir('Backend') {
                    sh 'mvn test'
                }
            }
        }

        stage('Maven Test SonarQube') {
            steps {
                dir('Backend') {
                    sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
                }
            }
        }

        stage('Maven Package') {
            steps {
                dir('Backend') {
                    sh 'mvn package -DskipTests=true'
                }
            }
        }

        stage('Install .m2') {
            steps {
                dir('Backend') {
                    sh 'mvn install'
                }
            }
        }

        stage('Maven Deploy Nexus') {
            steps {
                dir('Backend') {
                    sh 'mvn deploy -X -DskipTests=true'
                }
            }
        }

        stage('Docker Image') {
            steps {
                dir('Backend') {
                    sh '''docker login -u fediijat -p kopp92i11
                         docker build -t fediijat/valoparamadminbackend --build-arg JAR_URL=http://192.168.33.10:8081/repository/maven-releases/com/talan/ValoParamAdmin/1.0.1/ValoParamAdmin-1.0.1.jar .
                         '''
                }
            }
        }

        stage('Docker Push') {
            steps {
                dir('Backend') {
                    sh '''
                    docker stop postgresdb
                    docker push fediijat/valoparamadminbackend
                    '''
                }
            }
        }
         stage('Deploy AKS') {
                    steps {
                        dir('Deployment') {
                            sh '''
                            kubectl apply -f valoparamapi-deployment.yaml
                            kubectl apply -f valoparamapi-service.yaml
                            '''
                        }
                 }
            }
    }
}
